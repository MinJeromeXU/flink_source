Comparing source compatibility of /Users/xuminsong/Downloads/flink-1.9.0/flink-core/target/flink-core-1.9.0.jar against /Users/xuminsong/.m2/repository/org/apache/flink/flink-core/1.8.0/flink-core-1.8.0.jar
***  MODIFIED CLASS: PUBLIC org.apache.flink.api.common.ExecutionConfig  (compatible)
	===  CLASS FILE FORMAT VERSION: 52.0 <- 52.0
	+++  NEW METHOD: PUBLIC(+) void disableAutoGeneratedUIDs()
	+++  NEW METHOD: PUBLIC(+) void enableAutoGeneratedUIDs()
	+++  NEW METHOD: PUBLIC(+) org.apache.flink.api.common.ExecutionConfig$ClosureCleanerLevel getClosureCleanerLevel()
	+++  NEW METHOD: PUBLIC(+) boolean hasAutoGeneratedUIDsEnabled()
	+++  NEW METHOD: PUBLIC(+) org.apache.flink.api.common.ExecutionConfig setClosureCleanerLevel(org.apache.flink.api.common.ExecutionConfig$ClosureCleanerLevel)
+++  NEW ENUM: PUBLIC(+) STATIC(+) FINAL(+) org.apache.flink.api.common.ExecutionConfig$ClosureCleanerLevel  (compatible)
	+++  CLASS FILE FORMAT VERSION: 52.0 <- -1.-1
	+++  NEW INTERFACE: java.lang.Comparable
	+++  NEW INTERFACE: java.io.Serializable
	+++  NEW SUPERCLASS: java.lang.Enum
	+++  NEW FIELD: PUBLIC(+) STATIC(+) FINAL(+) org.apache.flink.api.common.ExecutionConfig$ClosureCleanerLevel TOP_LEVEL
	+++  NEW FIELD: PUBLIC(+) STATIC(+) FINAL(+) org.apache.flink.api.common.ExecutionConfig$ClosureCleanerLevel RECURSIVE
	+++  NEW FIELD: PUBLIC(+) STATIC(+) FINAL(+) org.apache.flink.api.common.ExecutionConfig$ClosureCleanerLevel NONE
	+++  NEW METHOD: PUBLIC(+) STATIC(+) org.apache.flink.api.common.ExecutionConfig$ClosureCleanerLevel valueOf(java.lang.String)
	+++  NEW METHOD: PUBLIC(+) STATIC(+) org.apache.flink.api.common.ExecutionConfig$ClosureCleanerLevel[] values()
***  MODIFIED CLASS: PUBLIC FINAL org.apache.flink.api.common.io.LocatableInputSplitAssigner  (not serializable)
	===  CLASS FILE FORMAT VERSION: 52.0 <- 52.0
	+++  NEW METHOD: PUBLIC(+) void returnInputSplit(java.util.List, int)
***  MODIFIED CLASS: PUBLIC ABSTRACT org.apache.flink.core.fs.FileSystem  (not serializable)
	===  CLASS FILE FORMAT VERSION: 52.0 <- 52.0
	***  MODIFIED METHOD: PUBLIC STATIC void initialize(org.apache.flink.configuration.Configuration)
		+++  NEW ANNOTATION: java.lang.Deprecated
		---  REMOVED EXCEPTION: java.io.IOException
		===  UNCHANGED EXCEPTION: org.apache.flink.configuration.IllegalConfigurationException
	+++  NEW METHOD: PUBLIC(+) STATIC(+) void initialize(org.apache.flink.configuration.Configuration, org.apache.flink.core.plugin.PluginManager)
		+++  NEW EXCEPTION: org.apache.flink.configuration.IllegalConfigurationException
